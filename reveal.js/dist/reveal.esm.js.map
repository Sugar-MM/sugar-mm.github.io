{"version":3,"file":"reveal.esm.js","sources":["../js/utils/constants.js","../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Element.matches with IE support.\r\n *\r\n * @param {HTMLElement} target The element to match\r\n * @param {String} selector The CSS selector to match\r\n * the element against\r\n *\r\n * @return {Boolean}\r\n */\r\nexport const matches = ( target, selector ) => {\r\n\r\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\r\n\r\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closest = ( target, selector ) => {\r\n\r\n\t// Native Element.closest\r\n\tif( typeof target.closest === 'function' ) {\r\n\t\treturn target.closest( selector );\r\n\t}\r\n\r\n\t// Polyfill\r\n\twhile( target ) {\r\n\t\tif( matches( target, selector ) ) {\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\ttarget = target.parentNode;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}","const UA = navigator.userAgent;\r\nconst testElement = document.createElement( 'div' );\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );\r\n\r\n// Flags if we should use zoom instead of transform to scale\r\n// up slides. Zoom produces crisper results but has a lot of\r\n// xbrowser quirks so we only use it in whitelisted browsers.\r\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\r\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );","/**\n * fitty v2.3.5 - Snugly resizes text to fit its parent container\n * Copyright (c) 2021 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { HORIZONTAL_SLIDES_SELECTOR, VERTICAL_SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, closest } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\nimport fitty from 'fitty';\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// Enable inline video playback in mobile Safari\r\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\r\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\r\n\t\t\t}\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\t// base64\r\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// URL(s)\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\r\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\r\n\t\t\t\t\t\t}).join( ',' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Enable inline playback in mobile Safari\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Mute is required for video to play when using\r\n\t\t\t\t\t// swipe gestures to navigate since they don't\r\n\t\t\t\t\t// count as direct user actions :'(\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.layout( slide );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JS-dependent layout helpers for the given slide,\r\n\t * if there are any.\r\n\t */\r\n\tlayout( slide ) {\r\n\r\n\t\t// Autosize text with the r-fit-text class based on the\r\n\t\t// size of its container. This needs to happen after the\r\n\t\t// slide is visible in order to measure the text.\r\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\r\n\t\t\tfitty( element, {\r\n\t\t\t\tminSize: 24,\r\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\r\n\t\t\t\tobserveMutations: false,\r\n\t\t\t\tobserveWindow: false\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = 'h.v';\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = 'c';\r\n\t\t\t}\r\n\r\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\r\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'c/t':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\r\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\r\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tconst element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\tconst data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\r\n\t\t};\r\n\r\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = data.backgroundColor;\r\n\r\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\r\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tconst rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tif( v < indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t}, this );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n// Counter used to generate unique IDs for auto-animated elements\r\nlet autoAnimateCounter = 0;\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\r\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\r\n\r\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\r\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\r\n\t\t// physically latter slide (independent of slide direction)\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \r\n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Eplicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\r\n\t\t\t// Disable scale transformations on text nodes, we transition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( matches( pair.from, textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considerd\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}\r\n","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\r\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keypress' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyPress( event ) {\r\n\r\n\t\t// Check if the pressed key is question mark\r\n\t\tif( event.shiftKey && event.charCode === 63 ) {\r\n\t\t\tthis.Reveal.toggleHelp();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\r\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif ( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\tlet hash = window.location.hash;\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet bits = hash.slice( 2 ).split( '/' ),\r\n\t\t\tname = hash.replace( /#\\/?/gi, '' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet element;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\t// Ensure that we're not already on a slide with the same name\r\n\t\t\tlet isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute( 'id' ) === name : false;\r\n\r\n\t\t\tif( element ) {\r\n\t\t\t\t// If the slide exists and is not the current slide...\r\n\t\t\t\tif ( !isSameNameAsCurrentSlide || typeof f !== 'undefined' ) {\r\n\t\t\t\t\t// ...find the position of the named slide and navigate to it\r\n\t\t\t\t\tlet slideIndices = this.Reveal.getIndices( element );\r\n\t\t\t\t\tthis.Reveal.slide( slideIndices.h, slideIndices.v, f );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If the slide doesn't exist, navigate to the current slide\r\n\t\t\telse {\r\n\t\t\t\tthis.Reveal.slide( indices.h || 0, indices.v || 0 );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( h !== indices.h || v !== indices.v || f !== undefined ) {\r\n\t\t\t\tthis.Reveal.slide( h, v, f );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\r\n\t\t\tlet hash = this.getHash();\r\n\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not avaialble.\r\n\t\t\tif( config.history ) {\r\n\t\t\t\twindow.location.hash = hash;\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\t// If the hash is empty, don't add it to the URL\r\n\t\t\t\tif( hash === '/' ) {\r\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tlet scale = this.Reveal.getProgress();\r\n\r\n\t\t\t// Don't fill the progress bar if there's only one slide\r\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\r\n\t\t\t\tscale = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slides = this.Reveal.getSlides();\r\n\t\tlet slidesTotal = slides.length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\r\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registed plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all regisered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class Print {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tasync setupPDF() {\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tconst doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tconst slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Re-run the slide layout so that r-fit-text is applied based on\r\n\t\t// the printed slide size\r\n\t\tslides.forEach( slide => this.Reveal.slideContent.layout( slide ) );\r\n\r\n\t\t// Batch scrollHeight access to prevent layout thrashing\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\r\n\r\n\t\tconst pages = [];\r\n\t\tconst pageContainer = slides[0].parentNode;\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tslides.forEach( function( slide, index ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\r\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement( 'div' );\r\n\t\t\t\tpages.push( page );\r\n\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tconst notesSpacing = 8;\r\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpages.push( notesElement );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( doingSlideNumbers ) {\r\n\t\t\t\t\tconst slideNumber = index + 1;\r\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slideNumber;\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\r\n\t\t\t\t\t\tpages.push( clonedPage );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this instance is being used to print a PDF.\r\n\t */\r\n\tisPrintingPDF() {\r\n\r\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\r\n\r\n\t}\r\n\r\n}\r\n","import { isAndroid } from '../utils/device.js'\r\nimport { matches } from '../utils/util.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\t// Prevent accidental swipes when scrubbing timelines\r\n\t\tif( matches( target, 'video, audio' ) ) return true;\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { closest } from '../utils/util.js'\r\n\r\n/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = closest( event.target, '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing and \r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\r\n\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. As an <aside class=\"notes\"> inside of the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using an <aside class=\"notes\"> element\r\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\r\n\t\tif( notesElement ) {\r\n\t\t\treturn notesElement.innerHTML;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'focused', we will only capture keyboard events\r\n\t// for embedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\r\n\tshowHiddenSlides: false,\r\n\r\n\t// Global override for autoplaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Print from './controllers/print.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '4.1.3';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2020 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config = {},\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tprint = new Print( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\r\n\r\n\t\t// Compose our config object in order of increasing precedence:\r\n\t\t// 1. Default reveal.js options\r\n\t\t// 2. Options provided via Reveal.configure() prior to\r\n\t\t//    initialization\r\n\t\t// 3. Options passed to the Reveal constructor\r\n\t\t// 4. Options passed to Reveal.initialize\r\n\t\t// 5. Query params\r\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Remove slides hidden with data-visibility\r\n\t\tremoveHiddenSlides();\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t\t// Special setup and config is required when printing to PDF\r\n\t\tif( print.isPrintingPDF() ) {\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t// measurements to be accurate\r\n\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\tprint.setupPDF();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.addEventListener( 'load', () => {\r\n\t\t\t\t\tprint.setupPDF();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all slides with data-visibility=\"hidden\". This\r\n\t * is done right before the rest of the presentation is\r\n\t * initialized.\r\n\t *\r\n\t * If you want to show all hidden slides, initialize\r\n\t * reveal.js with showHiddenSlides set to true.\r\n\t */\r\n\tfunction removeHiddenSlides() {\r\n\r\n\t\tif( !config.showHiddenSlides ) {\r\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\r\n\t\t\t\tslide.parentNode.removeChild( slide );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', event => {\r\n\t\t\t\tlet data = event.data;\r\n\r\n\t\t\t\t// Make sure we're dealing with JSON\r\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t\t\t// Check if the requested method can be found\r\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\t// Expose our configured slide dimensions as custom props\r\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\r\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t\treturn event;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1\r\n\t\t\t\tif( scale === 1 ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Zoom Scaling\r\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\r\n\t\t\t\t\t// effects are minor differences in text layout and iframe\r\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\r\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\r\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\r\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\r\n\t\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Transform Scaling\r\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\r\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\r\n\t\t\t\t\t// high scale values on ldpi screens.\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: config.width,\r\n\t\t\theight: config.height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [origin] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, origin ) {\r\n\r\n\t\t// Dispatch an event before hte slide\r\n\t\tconst slidechange = dispatchEvent({\r\n\t\t\ttype: 'beforeslidechange',\r\n\t\t\tdata: {\r\n\t\t\t\tindexh: h === undefined ? indexh : h,\r\n\t\t\t\tindexv: v === undefined ? indexv : v,\r\n\t\t\t\torigin\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Abort if this slide change was prevented by an event listener\r\n\t\tif( slidechange.defaultPrevented ) return;\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\r\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t\tautoAnimateTransition = true;\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\r\n\t\t\t}\r\n\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidechanged',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\torigin\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\r\n\t\t// from triggering layout mid-frame\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\t\t});\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tfragments.sortAll();\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle( slides = getHorizontalSlides() ) {\r\n\r\n\t\tslides.forEach( ( slide, i ) => {\r\n\r\n\t\t\t// Insert the slide next to a randomly picked sibling slide\r\n\t\t\t// slide. This may cause the slide to insert before itself,\r\n\t\t\t// but that's not an issue.\r\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\r\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\r\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\r\n\t\t\t}\r\n\r\n\t\t\t// Randomize the order of vertical slides (if there are any)\r\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\r\n\t\t\tif( verticalSlides.length ) {\r\n\t\t\t\tshuffle( verticalSlides );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = print.isPrintingPDF();\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\r\n\t\t\t\telement.classList.remove( 'past' );\r\n\t\t\t\telement.classList.remove( 'present' );\r\n\t\t\t\telement.classList.remove( 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( print.isPrintingPDF() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// availalbe if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t// Select all horizontal slides\r\n\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t// Assume we're not vertical\r\n\t\t\tv = undefined;\r\n\r\n\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\tif( isVertical ) {\r\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\r\n\r\n\t\t\t// When the slide first appears there is no \"current\" fragment so\r\n\t\t\t// we look for a data-autoslide timing on the first fragment\r\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t\t// is divided up into fragments.\r\n\t\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When going backwards and arriving on a stack we start\r\n\t\t\t\t// at the bottom of the stack\r\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown({skipFragments});\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight({skipFragments});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Preview management\r\n\t\tshowPreview,\r\n\t\thidePreview: closeOverlay,\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tprint,\r\n\t\tfocus,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.isReady = () => false;\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","UA","navigator","userAgent","testElement","isMobile","test","platform","maxTouchPoints","isChrome","isAndroid","supportsZoom","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","hex6","substr","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","undefined","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","onWindowHashChange","readURL","hash","bits","name","getElementById","decodeURIComponent","error","isSameNameAsCurrentSlide","slideIndices","hashIndexBase","hashOneBasedIndex","history","replaceState","pathname","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","Date","now","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Print","doingSlideNumbers","pageWidth","pageHeight","body","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","destroy","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","JSON","parse","method","args","dispatchPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","parent","self","message","namespace","getState","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","devicePixelRatio","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","reverse","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}